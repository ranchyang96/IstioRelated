Linkerd
CONTROL PLANE
- controller - multiple containers (public-api, proxy-api, destination, tap) that provide the bulk of the functionality
- web - provides Linkerd dashboard (show namespaces)
- prometheus - metrics collection
- grafana - dashboards for metrics
DATA PLANE
These proxies transparently intercept communication to and from each pod, and add features such as instrumentation and encryption (TLS), as well as allowing and denying requests according to the relevant policy.
Proxies
- Transparent, zero-config proxying for HTTP, HTTP/2, and arbitrary TCP protocols.
- Automatic Prometheus metrics export for HTTP and TCP traffic.
- Transparent, zero-config WebSocket proxying.
- Automatic, latency-aware, layer-7 load balancing.
- Automatic layer-4 load balancing for non-HTTP traffic.  
- Automatic TLS (experimental).
- An on-demand diagnostic tap API.

Envoy
- form a transparent communication mesh between Java, Go, C++, PHP, Python
- easy deployment and upgrades
- C++11 code base, well performed
- pluggable filter chain mechanism in L3/L4, support TCP/HTTP proxies, TLS
- support for HTTP L7 filter and routing
- HTTP/2, gRPC support, multiplexed transport
- service discovery and dynamic configuration
- health checking
- advanced load balancing support for automatic retries, circuit breaking, global rate limiting via an external rate limiting service, request shadowing, and outlier detection

Cilium
- based on Linux kernel technology BPF, which make it easy to provide security transparently
- protect and secure APIs transparently, provide filter on protocol requests rather then entire trust/block
- secure service to service communication based on identities: Cilium assigns a security identity to groups of application containers which share identical security polices
- secure access to and from external services: traditional CIDR based security policies
- simple networking: overlay mode; native routing mode (advanced)
- load balancing: implemented using BPF using hash table which is unlimited
- monitoring and troubleshooting: event monitoring with metadata (provide info of sender and receiver); policy decision tracing (why a packet dropped/request rejected); metrics export via prometheus


Linkerd is a standalone, open source RPC routing proxy built on Netty and Finagle (Scala/JVM).
Linkerd offers many of Finagle’s features, including latency-aware load balancing, connection pooling, circuit-breaking, retry budgets, deadlines, tracing, fine-grained instrumentation, and a traffic routing layer for request-level routing.
Linkerd provides a pluggable service discovery interface (with standard support for Consul and ZooKeeper, as well as the Marathon and Kubernetes APIs).

linkerd’s memory and CPU requirements are significantly higher than Envoy’s.
In contrast to Envoy, linkerd provides a minimalist configuration language, and explicitly does not support hot reloads, relying instead on dynamic provisioning and service abstractions. linkerd supports HTTP/1.1, Thrift, ThriftMux, HTTP/2 (experimental) and gRPC (experimental).
